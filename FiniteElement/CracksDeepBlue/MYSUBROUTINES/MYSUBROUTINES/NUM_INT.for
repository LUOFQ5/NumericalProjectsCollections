C Copyright (c) 2014 David Patrick Hodapp
C
C Permission is hereby granted, free of charge, to any person obtaining a copy
C of this software and associated documentation files (the "Software"), to deal
C in the Software without restriction, including without limitation the rights   
C to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
C copies of the Software, and to permit persons to whom the Software is
C furnished to do so, subject to the following conditions:
C
C The above copyright notice and this permission notice shall be included in
C all copies or substantial portions of the Software.
C
C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
C IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
C AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
C LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
C THE SOFTWARE.
C
      SUBROUTINE NUM_INT(FILENAME,FILELEN,NI,NII,
     1                   AI,AIITARGET,TRIANGLEA,AIIACTUAL,KOP,W,L,B)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC     
C     PURPOSE:
C     NUMERICALLY INTEGRATE CRACK LENGTH ON A CYCLE-BY-CYCLE BASIS
C
C     PARAMETERS:
C     - FILENAME:  FILE OF STRESS REVERSALS; FMT='(2ES17.10)'; SMIN,SMAX
C     - FILELEN:   MEANINGFUL PORTION OF FILENAME CHARACTER STRING
C     - NI:        CYCLE COUNT AT BEGNINNING OF CURRENT (i) INCREMENT
C     - NII:       CYCLE COUNT AT BEGNINNING OF (i+1) INCREMENT
C     - AI:        CRACK LENGTH [m] AT CURRENT (i) INCREMENT
C     - AIITARGET: TARGET FINAL CRACK LENGTH [m] BASED ON REFINED MESH 
C                  SIZE/EXTENT OF INCREMENTAL CRACK GROWTH
C     - TRIANGLEA: DEBOND CRACK GROWTH INCREMENT [m] 
C     - AIIACTUAL: ACTUAL FINAL CRACK LENGTH [m] BASED ON CYCLE-BY-CYCLE 
C                  NUMERICAL INTEGRATION
C     - KOP:       OPENING LEVEL [MPa-m^(1/2)] OF CURRENT (i) INCREMENT
C     - W:         M(T) SPECIMEN DIMENSION W [m] (SEE ASTM E647-13)
C     - L:         M(T) SPECIMEN DIMENSION L [m] (SEE ASTM E647-13)
C     - B:         M(T) SPECIMEN DIMENSION B [m] (SEE ASTM E647-13)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      IMPLICIT NONE
C
C     DECLARE CALLING PARAMETERS
      CHARACTER*256, INTENT(IN) :: FILENAME
      INTEGER, INTENT(IN)       :: FILELEN
      INTEGER, INTENT(IN)       :: NI
      INTEGER, INTENT(OUT)      :: NII
      REAL(KIND=8), INTENT(IN)  :: AI,AIITARGET,TRIANGLEA,KOP
      REAL(KIND=8), INTENT(OUT) :: AIIACTUAL
      REAL(KIND=8), INTENT(IN)  :: W,L,B
C
C     DECLARE LOCAL VARIABLES
      INTEGER      :: I,J,IOSTATUS
      INTEGER      :: N
      REAL(KIND=8) :: A,DA,SMIN,SMAX,KMIN,KMAX
C
C     DECLARE FUNCTIONS TO BE CALLED BY SUBROUTINE
      REAL(KIND=8) :: CONV_S_TO_K,CALC_DADN 
C
C     OPEN FILE CONTAINING STRESS REVERSALS
      OPEN(UNIT=102,FILE=FILENAME(1:FILELEN),STATUS='OLD',
     1        IOSTAT=IOSTATUS)
C     FORWARD TO LINE CORRESPONDING TO INITIAL STRESS CYCLE (IF APPLICABLE)
      IF (NI.GT.1) THEN
         DO I=1,(NI-1)
            READ(UNIT=102,FMT=*,IOSTAT=IOSTATUS)
         END DO		 
      END IF
C     DEFINE INITIAL VALUES FOR NII
      NII=NI
C     START READING CYCLES AND NUMERICALLY INTEGRATING CRACK LENGTH
      N=NI
C     **THE NTH CYCLE IS NOT INCLUDED IN CURRENT CRACK LENGTH A
      A=AI
      DO I=1,999999999
         READ(UNIT=102,FMT='(2ES17.10)',IOSTAT=IOSTATUS)SMIN,SMAX
         IF (IS_IOSTAT_END(IOSTATUS)) GO TO 100
         KMIN=CONV_S_TO_K(SMIN,A,W,L,B)
         KMAX=CONV_S_TO_K(SMAX,A,W,L,B)
         DA=CALC_DADN(KMAX,KMIN,KOP)
         A=A+DA
         N=N+1
         IF (A.GE.AIITARGET) THEN
            NII=N
            AIIACTUAL=A
C           **CRACK GROWTH IS NOT PERMITTED TO GROW MORE THAN HALFWAY
C             INTO NEXT INCREMENT
            IF (A.GE.(AIITARGET+0.5*TRIANGLEA)) THEN
               NII=NII-1
               AIIACTUAL=AIIACTUAL-DA
            END IF
            GO TO 200
         END IF
      END DO
C
 100  CONTINUE
C     REACHED END-OF-FILE BEFORE NII DETERMINED
      NII=N
      AIIACTUAL=A
 200  CONTINUE  
      CLOSE(102)
      RETURN
      END SUBROUTINE