C Copyright (c) 2014 David Patrick Hodapp
C
C Permission is hereby granted, free of charge, to any person obtaining a copy
C of this software and associated documentation files (the "Software"), to deal
C in the Software without restriction, including without limitation the rights   
C to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
C copies of the Software, and to permit persons to whom the Software is
C furnished to do so, subject to the following conditions:
C
C The above copyright notice and this permission notice shall be included in
C all copies or substantial portions of the Software.
C
C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
C IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
C AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
C LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
C THE SOFTWARE.
C
      SUBROUTINE UAMP(
     *     AMPNAME,TIME,AMPVALUEOLD,DT,NPROPS,PROPS,NSVARS, 
     *     SVARS,LFLAGSINFO,
     *     NSENSOR,SENSORVALUES,SENSORNAMES,JSENSORLOOKUPTABLE, 
     *     AMPVALUENEW, 
     *     LFLAGSDEFINE,
     *     AMPDERIVATIVE,AMPSECDERIVATIVE,AMPINCINTEGRAL,
     *     AMPDOUBLEINTEGRAL)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC     
C     (ABAQUS USER SUBROUTINE UAMP)
C     PURPOSE:
C     MODIFIES REMOTE LOADING (DISPLACEMENTS) APPLIED TO THE M(T) 
C     SPECIMEN TO REFLECT THE N SIGNIFICANT REVERSALS IDENTIFIED BY THE
C     RACETRACK COUNTING METHOD.
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      INCLUDE 'ABA_PARAM.INC'
C
C     TIME INDICES
      PARAMETER (ISTEPTIME           = 1,
     *           ITOTALTIME          = 2,
     *           NTIME               = 2)
C     FLAGS PASSED IN FOR INFORMATION
      PARAMETER (IINITIALIZATION     = 1,
     *           IREGULARINC         = 2,
     *           ICUTS               = 3,
     *           IKSTEP              = 4,
     *           NFLAGSINFO          = 4)
C     OPTIONAL FLAGS TO BE DEFINED
      PARAMETER (ICOMPUTEDERIV       = 1,
     *           ICOMPUTESECDERIV    = 2,
     *           ICOMPUTEINTEG       = 3,
     *           ICOMPUTEDOUBLEINTEG = 4,
     *           ISTOPANALYSIS       = 5,
     *           ICONCLUDESTEP       = 6,
     *           NFLAGSDEFINE        = 6)
      DIMENSION TIME(NTIME),LFLAGSINFO(NFLAGSINFO),
     *          LFLAGSDEFINE(NFLAGSDEFINE)
      CHARACTER*80 AMPNAME
C
      REAL :: LOADSTEPSTART,LOADSTEPEND
      DIMENSION JSENSORLOOKUPTABLE(*)
      DIMENSION SENSORVALUES(NSENSOR),SVARS(NSVARS),PROPS(NPROPS)
      CHARACTER*80 SENSORNAMES(NSENSOR)
C
C     DECLARE FUNCTIONS TO BE CALLED BY SUBROUTINE
      REAL(KIND=8) :: CONV_S_TO_DISP
C
C     COMMON BLOCK DATA
C     - RECSTEP:        CURRENT ANALYSIS STEP
C     - RECINC:         CURRENT ANALYSIS INCREMENT (WITHIN CURRENT STEP)
C     - DEBONDFLAG:     FLAG=1 DURING DEBOND STEP, FLAG=0 OTHERWISE   
C     - CRACKTIPNODE:   CRACK TIP NODE LABEL (RECORD 1993/ATTRIBUTE 5)
C     - DEBONDCRACKLEN: CUMULATIVE DEBOND CRACK LENGTH 
C                       (RECORD 1993/ATTRIBUTE 7)
C     - RECINCTIME:     TIME INDEX E [0,1] OF CURRENT ANALYSIS INCREMENT
C     - CRACKTIPCPRESS: CSTRESS CONTACT PRESSURES (RECORD 1511/ATTRIBUTE 1)
C                       OF CRACKTIPNODE
C       **ZEROTH INCREMENT ADDED INDEPENDENT OF RESULTS FILE AT INDEX=1
C         ACTUAL ARRAY WILL HAVE RECINC+1 ENTRIES
      INTEGER      :: RECSTEP,RECINC,DEBONDFLAG,CRACKTIPNODE
      REAL(KIND=8) :: DEBONDCRACKLEN 
      REAL(KIND=8), DIMENSION(99) :: RECINCTIME,CRACKTIPCPRESS
      COMMON /KDATA1/ RECSTEP,RECINC,DEBONDFLAG,CRACKTIPNODE,
     1                DEBONDCRACKLEN,RECINCTIME,CRACKTIPCPRESS
C
C     COMMON BLOCK DATA
C     - MTDIMB:          SPECIMEN DIMENSION B [m] (SEE ASTM E647-13)
C     - MTDIML:          SPECIMEN DIMENSION L [m] (SEE ASTM E647-13)
C     - MTDIMW:          SPECIMEN DIMENSION W [m] (SEE ASTM E647-13)
C     - INITIALCRACKLEN: INITIAL M(T) SPECIMEN HALF-CRACK LENGTH [m] 
C                        (SEE ASTM E647-13) BEFORE DEBOND
C     - STABCRACKLEN:    HALF-CRACK LENGTH [m] AT START OF NUMERICAL 
C                        INTEGRATION    
      REAL(KIND=8) :: MTDIMB,MTDIML,MTDIMW,INITIALCRACKLEN,STABCRACKLEN
      COMMON /KDATA2/ MTDIMB,MTDIML,MTDIMW,INITIALCRACKLEN,
     1                STABCRACKLEN
C
C     COMMON BLOCK DATA
C     - MTSTEPLOADING: VERTICAL BENDING STRESS (UNCRACKED SPECIMEN)
C                      TO BE REALIZED AT THE END OF THE STEP (INDEX)
C     - MEANS:         MEAN STRESS [MPa] CORRESPONDING TO STRESSSEQFIL
      REAL(KIND=8)                   :: MEANS 
      REAL(KIND=8), DIMENSION(99999) :: MTSTEPLOADING
      COMMON /KDATA3/ MEANS,MTSTEPLOADING
C
C     COMMON BLOCK DATA
C     - EOFFLAG:   FLAG=1 WHEN CYCNUM(CRACKGROWINC) CORRESPONDS TO EOF
C                  CONDITION, FLAG=0 OTHERWISE
      INTEGER :: EOFFLAG
      COMMON /KDATA6/ EOFFLAG
C
C     USER CODING TO STOP ANALYSIS IF EOFFLAG=1
      IF (EOFFLAG.EQ.1) LFLAGSDEFINE(ISTOPANALYSIS)=1
C
C     USER CODING TO COMPUTE AMPVALUENEW
      IF (AMPNAME(1:14).EQ.'STORM_FEEDBACK') THEN
         IF (LFLAGSINFO(IINITIALIZATION).EQ.1) THEN 
            AMPVALUENEW=AMPVALUEOLD
         ELSE
C        REPLICATES DEFAULT AMPLITUDE FUNCTION F(T)=T
C        NOTE: THE *DSLOAD OP=MOD (DEFAULT) DOES NOT APPEAR TO HOLD
C              IN THE INSTANCE OF *AMPLITUDE DEFINITION=TABULAR OR
C              DEFINITION=USER
            IF (LFLAGSINFO(IKSTEP).EQ.1) THEN
               LOADSTEPSTART=0.0
            ELSE
               LOADSTEPSTART=CONV_S_TO_DISP(
     1            MTSTEPLOADING(LFLAGSINFO(IKSTEP)-1),
     2            (INITIALCRACKLEN+DEBONDCRACKLEN),
     3            MTDIMW,MTDIML,MTDIMB)
            END IF
            LOADSTEPEND=CONV_S_TO_DISP(
     1            MTSTEPLOADING(LFLAGSINFO(IKSTEP)),
     2            (INITIALCRACKLEN+DEBONDCRACKLEN),
     3            MTDIMW,MTDIML,MTDIMB)
C           LINEARLY INTERPOLATES THE ABSOLUTE VALUE OF THE LOADING
            AMPVALUENEW=LOADSTEPSTART+DBLE(TIME(ISTEPTIME))*
     1                  (LOADSTEPEND-LOADSTEPSTART)
         END IF
      END IF 
C
      RETURN
      END SUBROUTINE