C Copyright (c) 2014 David Patrick Hodapp
C
C Permission is hereby granted, free of charge, to any person obtaining a copy
C of this software and associated documentation files (the "Software"), to deal
C in the Software without restriction, including without limitation the rights   
C to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
C copies of the Software, and to permit persons to whom the Software is
C furnished to do so, subject to the following conditions:
C
C The above copyright notice and this permission notice shall be included in
C all copies or substantial portions of the Software.
C
C THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
C IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
C AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
C LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
C THE SOFTWARE.
C
      SUBROUTINE OOR_REDUCE(FILENAME,FILELEN,NSTART,NSTOP,NUMOORCYC,
     1                      OUTPUTARRAY,DMIN,MAXDELTAS)
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC     
C     PURPOSE:
C     CONVERT ARBITRARY SEQUENCE OF STRESS REVERSALS INTO N 
C     SIGNIFICANT REVERSALS (CALLS ADDITIONAL SUBROUTINES)
C
C     PARAMETERS:
C     - FILENAME:    FILE OF STRESS REVERSALS; FMT='(2ES17.10)'; SMIN,SMAX
C     - FILELEN:     MEANINGFUL PORTION OF FILENAME CHARACTER STRING
C     - NSTART:      FILENAME STARTING LINE NUMBER (INCLUSIVE)
C     - NSTOP:       FILENAME STOPPING LINE NUMBER (EXCLUSIVE)
C     - NUMOORCYC:   NUMBER OF SIGNIFICANT REVERSAL PAIRS TO BE RETURNED
C                    **ASSUMED NUMOORCYC<4999
C     - OUTPUTARRAY: ARRAY OF SIGNIFICANT REVERSALS; SMIN,SMAX,...
C     - DMIN:        OOR SCREENING THRESHOLD AS FRACTION OF SET DIAMETER
C     - MAXDELTAS:   SET DIAMETER
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
C
      IMPLICIT NONE
C
C     DECLARE CALLING PARAMETERS
      CHARACTER*256, INTENT(IN) :: FILENAME
      INTEGER, INTENT(IN)       :: FILELEN
      INTEGER, INTENT(IN)       :: NSTART,NSTOP,NUMOORCYC
      REAL(KIND=8), INTENT(OUT) :: DMIN,MAXDELTAS
      REAL(KIND=8), DIMENSION(9999), INTENT(OUT) :: OUTPUTARRAY
C
C     DECLARE LOCAL VARIABLES
      INTEGER      :: I,J,IOSTATUS,ARRAYDIM1
      INTEGER      :: N,FRST,TTL,RPT,NOR,FST
      REAL(KIND=8) :: SMIN,SMAX,DMINLL,DMINUL,NXT,TRP
      REAL(KIND=8), ALLOCATABLE, DIMENSION(:,:) :: TPARRAY,RPARRAY
C 
C     OPEN FILE CONTAINING STRESS REVERSALS AND STORE DATA
      N=2*(NSTOP-NSTART)
      ARRAYDIM1=N+1
      ALLOCATE(TPARRAY(ARRAYDIM1,2),RPARRAY(ARRAYDIM1,2))   
      OPEN(UNIT=102,FILE=FILENAME(1:FILELEN),STATUS='OLD',
     1        IOSTAT=IOSTATUS)
      IF (NSTART.GT.1) THEN
         DO I=1,(NSTART-1)
            READ(UNIT=102,FMT=*,IOSTAT=IOSTATUS)
         END DO
      END IF    
      DO I=1,(NSTOP-NSTART)
         READ(UNIT=102,FMT='(2ES17.10)',
     1        IOSTAT=IOSTATUS)TPARRAY(2*I-1,1),TPARRAY(2*I,1)
         IF (IS_IOSTAT_END(IOSTATUS)) GO TO 1
         TPARRAY(2*I-1,2)=2*I-1
         TPARRAY(2*I,2)=2*I
      END DO
 1    CONTINUE
      CLOSE(UNIT=102)
      IF (N.EQ.0) GO TO 199
C
C     DETERMINE THRESHOLD FOR A SIGNIFICANT REVERSAL
C     **SEARCH ALGORITHM TO ASSOCIATE A DMIN TO SPECIFIED NUMOORCYC
C       WHICH RELIES ON PARTITIONING THE RANGE OF POSSIBLE DMIN
      SMIN=MINVAL(TPARRAY(1:N,1))
      SMAX=MAXVAL(TPARRAY(1:N,1))
      MAXDELTAS=(SMAX-SMIN) 
      DMINLL=0.0
      DMINUL=1.0*(SMAX-SMIN)
      DMIN=0.5*(SMAX-SMIN)
C    
C     IDENTIFIES A NON-SEARCHABLE CONDITION AND RETURNS A VALID OUTPUT
C     **THIS SHOULD BE AN EXCEEDINGLY RARE CONDITION
      IF ((NUMOORCYC*2).GE.N) THEN
         DO I=1,N
C           RETURN ORIGINAL STRESS SEQUENCE
            OUTPUTARRAY(I)=TPARRAY(I,1) 
         END DO
         DO I=(N+1),(NUMOORCYC*2)
C           ZERO-PAD TO ACHEIVE NECESSARY LENGTH
            OUTPUTARRAY(I)=0.0 
         END DO
         DMIN=0.0
         GO TO 200
      END IF
C
 100  CONTINUE
C
C     RESEQUENCE DATA TO START AT SMAX (INDEX=FRST)
      FRST=MAXLOC(TPARRAY(1:N,1),DIM=1)
      CALL RESEQ(TPARRAY,ARRAYDIM1,N,FRST) 
C
C     PERFORM RACETRACK COUNTING ACCORDING TO THRESHOLD DMIN
C     **ALGORITHM FROM SAE PAPER NO. 730565 (APPENDIX E)
      N=N+1
      TPARRAY(N,1)=TPARRAY(1,1)
      TPARRAY(N,2)=N
      NOR=1
      RPARRAY(NOR,1)=TPARRAY(1,1)
      RPARRAY(NOR,2)=TPARRAY(1,2)
      TTL=2
      NXT=TPARRAY(TTL,1)
 30   CONTINUE 
      IF (ABS(RPARRAY(NOR,1)-NXT).GT.DMIN) GO TO 35
      TTL=TTL+2
      NXT=TPARRAY(TTL,1)
      GO TO 30
 35   CONTINUE
      TRP=NXT
      RPT=TPARRAY(TTL,2)
 37   CONTINUE 
      TTL=TTL+1
      IF (TTL.GT.N) GO TO 45
      NXT=TPARRAY(TTL,1)
      IF (ABS(NXT-TRP).GT.DMIN) GO TO 40
      TTL=TTL+1
      NXT=TPARRAY(TTL,1)
      IF (ABS(RPARRAY(NOR,1)-NXT).GT.ABS(RPARRAY(NOR,1)-TRP)) THEN
         GO TO 35
      ELSE
         GO TO 37
      END IF
 40   CONTINUE
      NOR=NOR+1
      RPARRAY(NOR,1)=TRP
      RPARRAY(NOR,2)=RPT
      GO TO 35   
 45   CONTINUE 
      N=N-1
C
C     RESEQUENCE DATA TO REFLECT ORIGINAL SEQUENCE
      FST=MINLOC(RPARRAY(1:NOR,2),DIM=1)
      CALL RESEQ(RPARRAY,ARRAYDIM1,NOR,FST)
      FRST=MINLOC(TPARRAY(1:N,2),DIM=1)
      CALL RESEQ(TPARRAY,ARRAYDIM1,N,FRST)
C
C     ENSURES THAT RESEQUENCED RPARRAY IN ORDER SMIN,SMAX,...
C     **THIS WILL NOT NECESSARILY BE THE CASE
C     IF NOT, ADD MIN VALUE PRECEDING RPARRAY(1,1) AND 
C                 MAX VALUE FOLLOWING RPARRAY(NOR,1)
C     **THIS IS NECESSARY TO ACHEIVE CONSISTENT OUTPUT LOADING SEQUENCES
C     **THIS CORRECTION WILL NOT WORK WHEN RPARRAY(1,1)=TPARRAY(1,1)
      IF (RPARRAY(1,1).GT.RPARRAY(2,1)) THEN
         DO I=1,NOR
             J=NOR+1-I
             RPARRAY(J+1,1)=RPARRAY(J,1)
             RPARRAY(J+1,2)=RPARRAY(J,2)
         END DO
         RPARRAY(1,1)=MINVAL(TPARRAY(1:RPARRAY(2,2),1))
         RPARRAY(1,2)=MINLOC(TPARRAY(1:RPARRAY(2,2),1),DIM=1)
         NOR=NOR+2
         RPARRAY(NOR,1)=MAXVAL(TPARRAY(RPARRAY((NOR-1),2):N,1))
         RPARRAY(NOR,2)=MAXLOC(TPARRAY(RPARRAY((NOR-1),2):N,1),DIM=1)      
      END IF 
C
C     BREAK IF NOR=NUMOORCYC*2         
      IF (NOR.EQ.(NUMOORCYC*2)) THEN
         DO I=1,NOR
            OUTPUTARRAY(I)=RPARRAY(I,1) 
         END DO
         DMIN=DMIN/(SMAX-SMIN)
         GO TO 200
C     -OR- 
C     BREAK AND ZERO-PAD IF CHANGE IN DMIN BELOW SOME THRESHOLD
C     **PREVENTS AN INFINITE LOOP W/O ARBITRARILY TRUNCATING RPARRAY
C     **THIS SHOULD BE AN EXCEEDINGLY RARE CONDITION
      ELSEIF (((DMINUL-DMINLL).LT.(0.0001*(SMAX-SMIN))).AND.
     1        (NOR.LT.(NUMOORCYC*2))) THEN
         DO I=1,NOR
C           RETURN SIGNIFICANT REVERSALS
            OUTPUTARRAY(I)=RPARRAY(I,1) 
         END DO
         DO I=(NOR+1),(NUMOORCYC*2)
C           ZERO-PAD TO ACHEIVE NECESSARY LENGTH
            OUTPUTARRAY(I)=0.0 
         END DO
         DMIN=DMIN/(SMAX-SMIN)
         GO TO 200
C     -OR-
C     DETERMINE NEW DMIN BASED ON PARTITIONING AND GO TO 100           
      ELSEIF (NOR.GT.(NUMOORCYC*2)) THEN
         DMINLL=DMIN
         DMIN=DMIN+0.5*(DMINUL-DMIN)
         GO TO 100
      ELSEIF (NOR.LT.(NUMOORCYC*2)) THEN
         DMINUL=DMIN
         DMIN=DMIN-0.5*(DMIN-DMINLL)
         GO TO 100             
      END IF     
C  
 199  CONTINUE
      DO I=1,(NUMOORCYC*2)
         OUTPUTARRAY(I)=0.0
      END DO
      DMIN=0.0
      MAXDELTAS=0.0
C
 200  CONTINUE
      DEALLOCATE(TPARRAY,RPARRAY)     
      RETURN
      END SUBROUTINE