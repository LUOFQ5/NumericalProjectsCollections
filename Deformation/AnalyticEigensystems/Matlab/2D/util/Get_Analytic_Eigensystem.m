function [Q lambdas] = Get_Analytic_Eigensystem(Psi)
  syms I1 I2 I3 real;
  syms sigma0 sigma1 real;

  lambdas = sym(zeros(4,1));

  % twist
  lambdas(1) = (2 / I1) * diff(Psi, I1) + ...
                2 * diff(Psi, I2) + ...
                diff(Psi, I3);
  % flip
  lambdas(2) = 2 * diff(Psi, I2) - diff(Psi, I3);

  % x-scale
  lambdas(3) = sym(0) + ...
               2 * diff(Psi, I2) + ...
               diff(Psi, I1, 2) + ...
               4 * sigma0^2 * diff(Psi, I2, 2) + ...
               sigma1^2 * diff(Psi, I3, 2) + ...
               4 * sigma0 * diff(diff(Psi, I1), I2) + ...
               4 * I3 * diff(diff(Psi, I2), I3) + ...
               2 * sigma1 * diff(diff(Psi, I3), I1);

  % y-scale
  lambdas(4) = 2 * diff(Psi, I2) + ...
               diff(Psi, I1, 2) + ...
               4 * sigma1^2 * diff(Psi, I2, 2) + ...
               sigma0^2 * diff(Psi, I3, 2) + ...
               4 * sigma1 * diff(diff(Psi, I1), I2) + ...
               4 * I3 * diff(diff(Psi, I2), I3) + ...
               2 * sigma0 * diff(diff(Psi, I3), I1);

  % get compact expressions for the eigenvalues
  for i = 1:4
    lambdas(i) = subs(lambdas(i), I2, I1^2 - 2 * I3);
    lambdas(i) = subs(lambdas(i), I1, sigma0 + sigma1);
    lambdas(i) = subs(lambdas(i), I3, sigma0 * sigma1);
    lambdas(i) = simplify(lambdas(i));
  end
  
  % build the symbolic eigenvector gallery
  eigenvector_gallery_sym;

  % populate the eigenvectors
  Q = [t p r l];
end
