function [Q lambdas] = Get_Analytic_Eigensystem(Psi)
  syms I1 I2 I3 real;
  syms sigma0 sigma1 sigma2 real;

  lambdas = sym(zeros(9,1));

  % z-twist
  lambdas(1) = (2 / (sigma0 + sigma1)) * diff(Psi, I1) + ...
                2 * diff(Psi, I2) + ...
                sigma2 * diff(Psi, I3);
  % x-twist
  lambdas(2) = (2 / (sigma1 + sigma2)) * diff(Psi, I1) + ...
                2 * diff(Psi, I2) + ...
                sigma0 * diff(Psi, I3);
  % y-twist
  lambdas(3) = (2 / (sigma0 + sigma2)) * diff(Psi, I1) + ...
                2 * diff(Psi, I2) + ...
                sigma1 * diff(Psi, I3);

  % x-flip
  lambdas(4) = 2 * diff(Psi, I2) - sigma2 * diff(Psi, I3);

  % y-flip
  lambdas(5) = 2 * diff(Psi, I2) - sigma0 * diff(Psi, I3);

  % z-flip
  lambdas(6) = 2 * diff(Psi, I2) - sigma1 * diff(Psi, I3);

  % x-scale
  lambdas(7) = 2 * diff(Psi, I2) + ...
               diff(Psi, I1, 2) + ...
               4 * sigma0^2 * diff(Psi, I2, 2) + ...
               sigma1^2 * sigma2^2 * diff(Psi, I3, 2) + ...
               4 * sigma0 * diff(diff(Psi, I1), I2) + ...
               4 * I3 * diff(diff(Psi, I2), I3) + ...
               2 * sigma1 * sigma2 * diff(diff(Psi, I3), I1);

  % y-scale
  lambdas(8) = 2 * diff(Psi, I2) + ...
               diff(Psi, I1, 2) + ...
               4 * sigma1^2 * diff(Psi, I2, 2) + ...
               sigma0^2 * sigma2^2 * diff(Psi, I3, 2) + ...
               4 * sigma1 * diff(diff(Psi, I1), I2) + ...
               4 * I3 * diff(diff(Psi, I2), I3) + ...
               2 * sigma0 * sigma2 * diff(diff(Psi, I3), I1);

  % z-scale
  lambdas(9) = 2 * diff(Psi, I2) + ...
               diff(Psi, I1, 2) + ...
               4 * sigma2^2 * diff(Psi, I2, 2) + ...
               sigma0^2 * sigma1^2 * diff(Psi, I3, 2) + ...
               4 * sigma2 * diff(diff(Psi, I1), I2) + ...
               4 * I3 * diff(diff(Psi, I2), I3) + ...
               2 * sigma0 * sigma1 * diff(diff(Psi, I3), I1);

  % get compact expressions for the eigenvalues
  for i = 1:9
    lambdas(i) = subs(lambdas(i), I1, sigma0 + sigma1 + sigma2);
    lambdas(i) = subs(lambdas(i), I2, sigma0^2 + sigma1^2 + sigma2^2);
    lambdas(i) = subs(lambdas(i), I3, sigma0 * sigma1 * sigma2);
    lambdas(i) = simplify(lambdas(i));
  end
  
  % build the symbolic eigenvector gallery
  eigenvector_gallery_sym;

  % populate the eigenvectors
  Q = [t0 t1 t2 l0 l1 l2 s0 s1 s2];
end
