# common stuff
GLVUFLAGS = -lglvuglvu -lglvufileutils -lglvucamera -lglvumath -L${GLVU_LIB}
CFLAGS_COMMON = -w -O3 -c -Wall -I../../ \
                -I../../src/util \
                -I../../src/linearalgebra \
                -I../../src/geometry \
                -I../../src/material \
                -I../../src/cubature \
                -I../../src/integrator \
                -I${AMD_INCLUDE} \
                -I${UMFPACK_INCLUDE} \
                -I${UFCONFIG_INCLUDE} \
                -I${ARPACKPP_INCLUDE} \
                -I${GLVU_INCLUDE} -I${MKLINC} -I${SLEPC_DIR}/include

# calls:
#CC         = g++
CFLAGS     = ${CFLAGS_COMMON} -O3 -Wno-unused -fopenmp
LDFLAGS = -O3 -fexceptions -DLONGBLAS='long long' ${UMFPACK_LIB}/libumfpack.a ${AMD_LIB}/libamd.a -L${MKLLIB} -lmkl_intel -Wl,--start-group -lmkl_intel_thread -lmkl_core -Wl,--end-group -L${ICCLIB} -liomp5 -lpthread -lm -L${ARPACK_LIBRARY} -larpack_LINUX

EXECUTABLE = ../../bin/ModalDerivatives

#regression: $(EXECUTABLE)
ALL: $(EXECUTABLE)

LINALGEBRASRC = ../../src/linearalgebra/MATRIX3.cpp \
                ../../src/linearalgebra/VECTOR.cpp \
                ../../src/linearalgebra/MATRIX.cpp \
                ../../src/linearalgebra/TENSOR3.cpp \
                ../../src/linearalgebra/TENSOR4.cpp \
                ../../src/linearalgebra/SPARSE_MATRIX.cpp \
                ../../src/linearalgebra/SPARSE_PETSC_MATRIX.cpp \
                ../../src/linearalgebra/NNLS.cpp \
                ../../src/linearalgebra/QUATERNION.cpp \
                ../../src/linearalgebra/PCG_MATRIX.cpp \
                ../../src/linearalgebra/BLOCK_MATRIX.cpp \
                ../../src/linearalgebra/BLOCK_DIAGONAL_MATRIX.cpp \
                ../../src/linearalgebra/SANDWICH_TRANSFORM.cpp \
                ../../src/linearalgebra/SANDWICH_TRANSFORM_TENSOR3.cpp \
                ../../src/linearalgebra/BLOCK_SPARSE_MATRIX.cpp \
                ../../src/linearalgebra/BLOCK_VECTOR.cpp
GEOMETRYSRC = ../../src/geometry/TET.cpp \
              ../../src/geometry/TRIANGLE.cpp \
              ../../src/geometry/BOX.cpp \
              ../../src/geometry/CYLINDER.cpp \
              ../../src/geometry/SURFACE.cpp \
              ../../src/geometry/PLANE.cpp \
              ../../src/geometry/COMPOUND.cpp \
              ../../src/geometry/SPHERE.cpp  \
              ../../src/geometry/OBJ.cpp \
              ../../src/geometry/BD_TREE.cpp \
              ../../src/geometry/ISO_STUFFER.cpp \
              ../../src/geometry/plyfile.cpp \
              ../../src/geometry/TET_MESH.cpp \
              ../../src/geometry/UNCONSTRAINED_TET_MESH.cpp \
              ../../src/geometry/UNCONSTRAINED_SUBSPACE_TET_MESH.cpp \
              ../../src/geometry/PARTITIONED_TET_MESH.cpp \
              ../../src/geometry/PARTITIONED_SUBSPACE_TET_MESH.cpp \
              ../../src/geometry/PARTITIONED_SKINNED_SUBSPACE_TET_MESH.cpp \
              ../../src/geometry/SKELETON.cpp \
              ../../src/geometry/SUBSPACE_TET_MESH.cpp
UTILSRC = ../../src/util/SIMPLE_PARSER.cpp
MATERIALSRC = ../../src/material/STVK.cpp \
              ../../src/material/ARRUDA_BOYCE.cpp \
              ../../src/material/MOONEY_RIVLIN.cpp \
              ../../src/material/INVERTIBLE.cpp \
              ../../src/material/NEO_HOOKEAN.cpp \
              ../../src/material/MATERIAL.cpp
INTEGRATORSRC = ../../src/integrator/SUBSPACE_INTEGRATOR.cpp \
              ../../src/integrator/UNCONSTRAINED_SUBSPACE_INTEGRATOR.cpp \
              ../../src/integrator/SUBSPACE_MULTIBODY_INTEGRATOR.cpp \
              ../../src/integrator/FULLSPACE_INTEGRATOR.cpp
CUBATURESRC = ../../src/cubature/CUBATURE_GENERATOR.cpp ../../src/cubature/PARTITIONED_CUBATURE_GENERATOR.cpp ../../src/cubature/ONLINE_CUBATURE_GENERATOR.cpp
SOURCEC    = main.cpp \
             $(LINALGEBRASRC) \
             $(GEOMETRYSRC) \
             $(UTILSRC) \
             $(MATERIALSRC) \
             $(INTEGRATORSRC) \
						 $(CUBATURESRC)
OBJSC = $(SOURCEC:.cpp=.o)

include ${SLEPC_DIR}/conf/slepc_common

CLINKER = g++

$(EXECUTABLE) : $(OBJSC) chkopts
	${CLINKER} -o ${EXECUTABLE} $(OBJSC) ${SLEPC_LIB} ${LDFLAGS} ${GLVUFLAGS} -lGLU -lGL -lglut 
